// pages/top-users.tsx
import Head from "next/head";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

type LeaderUser = {
  id: string;
  name: string | null;
  email: string | null;
  postsCount: number;
  commentsCount: number;
  score: number;
};

export async function getServerSideProps() {
  // Pull users with counts. This is schema-safe (_count is generated by Prisma).
  const users = await prisma.user.findMany({
    select: {
      id: true,
      name: true,
      email: true,
      _count: {
        select: {
          posts: true,     // if your schema doesn’t have posts relation, this will be 0
          comments: true,  // if missing, also 0
        },
      },
    },
  });

  const leaders: LeaderUser[] = users
    .map((u) => {
      const postsCount = u._count?.posts ?? 0;
      const commentsCount = u._count?.comments ?? 0;
      return {
        id: u.id,
        name: u.name,
        email: u.email,
        postsCount,
        commentsCount,
        score: postsCount * 2 + commentsCount, // simple weighted score
      };
    })
    .sort((a, b) => b.score - a.score)
    .slice(0, 25);

  return {
    props: { leaders: JSON.parse(JSON.stringify(leaders)) },
  };
}

export default function TopUsers({ leaders }: { leaders: LeaderUser[] }) {
  return (
    <>
      <Head>
        <title>Top Users — Whistle</title>
      </Head>
      <main className="container max-w-2xl mx-auto py-6">
        <h1 className="text-2xl font-semibold mb-4">Top Users</h1>
        {!leaders.length ? (
          <p>No users yet.</p>
        ) : (
          <ol className="space-y-2">
            {leaders.map((u, i) => (
              <li key={u.id} className="flex items-center justify-between rounded border p-3 bg-white">
                <div>
                  <div className="font-medium">
                    #{i + 1} {u.name || u.email?.split("@")[0] || "User"}
                  </div>
                  <div className="text-xs text-gray-600">
                    Posts: {u.postsCount} · Comments: {u.commentsCount}
                  </div>
                </div>
                <div className="text-sm font-semibold">Score: {u.score}</div>
              </li>
            ))}
          </ol>
        )}
      </main>
    </>
  );
}
