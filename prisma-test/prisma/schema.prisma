generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  comments      Comment[]
  experimentEnrollments ExperimentEnrollment[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Post {
  id         String    @id @default(cuid())
  title      String
  content    String?
  image      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  comments   Comment[]
  subforum   Subforum? @relation(fields: [subforumId], references: [id])
  subforumId String?
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  postId    String
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  post      Post      @relation(fields: [postId], references: [id])
  parentId  String?
  parent    Comment?  @relation("CommentHierarchy", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentHierarchy")
}

model Subforum {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  posts     Post[]
}

model Experiment {
  id         String     @id @default(cuid())
  key        String     @unique
  variants   Variant[]
  enrollments ExperimentEnrollment[]
}

model Variant {
  id             String     @id @default(cuid())
  name           String
  experimentId   String
  experiment     Experiment @relation(fields: [experimentId], references: [id])
  enrollments    ExperimentEnrollment[]
}

model ExperimentEnrollment {
  id           String     @id @default(cuid())
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  experimentId String
  experiment   Experiment @relation(fields: [experimentId], references: [id])
  variantId    String
  variant      Variant    @relation(fields: [variantId], references: [id])
}
